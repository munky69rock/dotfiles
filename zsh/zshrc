export LANG="ja_JP.UTF-8"
export LC_ALL=$LANG

export EDITOR=$(which vim)
export HOST=`hostname`

LOCAL_LIB_DIR=$HOME/lib

autoload colors
colors
PROMPT="%{${fg[white]}%}[%n@%m:%~]%#%{${reset_color}%} "
PROMPT2="%{${fg[white]}%}%_%#%{${reset_color}%} "
SPROMPT="%{${fg[white]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
#[ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
#  PROMPT="%{${fg[white]}%}${HOST%%.*} ${PROMPT}"

# http://qiita.com/items/8d5a627d773758dd8078?utm_source=Qiita+Newsletter+Users&utm_campaign=bff63624dd-Qiita_newsletter_31_19_12_2012&utm_medium=email
# for git, mercurial, ect...
autoload -Uz vcs_info add-zsh-hook
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
function _precmd_for_git () {
  psvar=()
  LANG=en_US.UTF-8 vcs_info
  [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
add-zsh-hook preexec _precmd_for_git
RPROMPT="%1(v|%F{green}%1v%f|)"

export PROMPT_EOL_MARK=""
setopt auto_cd
setopt auto_pushd
setopt correct
setopt list_packed
setopt noautoremoveslash
setopt nolistbeep
bindkey -e # emacs

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end
export HISTFILE=$HOME/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
setopt hist_ignore_all_dups # ignore duplication command history list
setopt hist_reduce_blanks # ignore command spaces
setopt share_history # share command history data

# zsh-completions
if [ -d ~/.zsh-completions ]; then
  fpath=(~/.zsh-completions/src $fpath)
elif [ -d $HOME/git/dotfiles/zsh/zsh-completions ]; then
  fpath=($HOME/git/dotfiles/zsh/zsh-completions/src $fpath)
elif [ -d /usr/local/share/zsh-completions ]; then
  fpath=(/usr/local/share/zsh-completions $fpath)
fi

autoload -U compinit
compinit
setopt complete_aliases # aliased ls needs if file/dir completions work

case "${OSTYPE}" in
freebsd*|darwin*)
  alias ls="ls -G -w"
  ;;
linux*|cygwin*)
  alias ls="ls --color"
  ;;
esac

unset LSCOLORS
case "${TERM}" in
xterm)
  export TERM=xterm-color
  ;;
kterm)
  export TERM=kterm-color
  # set BackSpace control character
  stty erase
  ;;
cons25)
  unset LANG
  export LSCOLORS=ExFxCxdxBxegedabagacad
  export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30'
  zstyle ':completion:*' list-colors \
    'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
  ;;
esac

# set terminal title including current directory
case "${TERM}" in
kterm*|xterm*)
  export LSCOLORS=exfxcxdxbxegedabagacad
  export LS_COLORS='di=01;34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30'
  zstyle ':completion:*' list-colors \
    'di=01;34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
  ;;
esac

# perl
## plenv
export PLENV_ROOT=$LOCAL_LIB_DIR/perl5/plenv
[ -s $PLENV_ROOT/bin ]           && export PATH=$PLENV_ROOT/bin:$PATH
[ -s $PLENV_ROOT/bin/plenv ]     && eval "$(plenv init -)"

## perlbrew
#export PERLBREW_ROOT=$LOCAL_LIB_DIR/perl5/perlbrew
#export PERLBREW_HOME=$LOCAL_LIB_DIR/perl5/perlbrew
#[ -s $PERLBREW_ROOT/etc/bashrc ]   && source $PERLBREW_ROOT/etc/bashrc

# python
## pyenv
export PYENV_ROOT=$LOCAL_LIB_DIR/python/pyenv
[ -s $PYENV_ROOT/bin ]             && export PATH=$PYENV_ROOT/bin:$PATH
[ -s $PYENV_ROOT/bin/pyenv ]       && eval "$(pyenv init -)"

## pythonbrew
#export PYTHONBREW_ROOT=$LOCAL_LIB_DIR/python/pythonbrew
#[ -s $PYTHONBREW_ROOT/etc/bashrc ] && source $PYTHONBREW_ROOT/etc/bashrc

# ruby
## rbenv
export RBENV_ROOT=$LOCAL_LIB_DIR/ruby/rbenv
[ -s $RBENV_ROOT/bin ]           && export PATH=$RBENV_ROOT/bin:$PATH
[ -s $RBENV_ROOT/bin/rbenv ]     && eval "$(rbenv init -)"

## rvm
#export rvm_path=$LOCAL_LIB_DIR/ruby/rvm
#[ -s $rvm_path/scripts/rvm ]       && source $rvm_path/scripts/rvm

# node
export NODEBREW_ROOT=$LOCAL_LIB_DIR/node/nodebrew
[ -s $NODEBREW_ROOT/current/bin ] && export PATH=$NODEBREW_ROOT/current/bin:$PATH

## load user .zshrc configuration file
[ -f $HOME/.zshrc.local ] && source $HOME/.zshrc.local
[ -f $HOME/.aliases ]     && source $HOME/.aliases

# zsh plugins
#_zsh_plugin_dir=$HOME/git/dotfiles/zsh/plugins
#if [ -s "$_zsh_plugin_dir" ]; then
#  for f in $(find $_zsh_plugin_dir/ -type f); do
#    source $f
#  done
#fi

export PATH=$HOME/bin:$PATH

#PATH=$PATH:$LOCAL_LIB_DIR/ruby/rvm/bin # Add RVM to PATH for scripting
